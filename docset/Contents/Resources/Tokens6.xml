<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/GMSyntaxHighlighter.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/GMSyntaxHighlighter</TokenIdentifier>
			<Abstract type="html">GMSyntax highlighter is a fast objective C general purpose syntax highlighter.</Abstract>
			<DeclaredIn>GMSyntaxHighlighter.h</DeclaredIn>
			
			<NodeRef refid="6"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GMSyntaxHighlighter/setTheme:</TokenIdentifier>
			<Abstract type="html">The theme to use as for coloring the code.</Abstract>
			<DeclaredIn>GMSyntaxHighlighter.h</DeclaredIn>			
			
			<Declaration>@property (retain) GMTheme *theme</Declaration>
			
			
			<Anchor>//api/name/theme</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GMSyntaxHighlighter/theme</TokenIdentifier>
			<Abstract type="html">The theme to use as for coloring the code.</Abstract>
			<DeclaredIn>GMSyntaxHighlighter.h</DeclaredIn>			
			
			<Declaration>@property (retain) GMTheme *theme</Declaration>
			
			
			<Anchor>//api/name/theme</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GMSyntaxHighlighter/setLanguage:</TokenIdentifier>
			<Abstract type="html">The language definition to tokenize the code with.</Abstract>
			<DeclaredIn>GMSyntaxHighlighter.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSDictionary *language</Declaration>
			
			
			<Anchor>//api/name/language</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/GMSyntaxHighlighter/language</TokenIdentifier>
			<Abstract type="html">The language definition to tokenize the code with.</Abstract>
			<DeclaredIn>GMSyntaxHighlighter.h</DeclaredIn>			
			
			<Declaration>@property (retain) NSDictionary *language</Declaration>
			
			
			<Anchor>//api/name/language</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GMSyntaxHighlighter/highlight:</TokenIdentifier>
			<Abstract type="html">Highlights a string of source code.</Abstract>
			<DeclaredIn>GMSyntaxHighlighter.h</DeclaredIn>			
			
			<Declaration>- (NSAttributedString *)highlight:(NSString *)text</Declaration>
			<Parameters>
				<Parameter>
					<Name>text</Name>
					<Abstract type="html">The code that you wish to highlight.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An attributed string where individual language elements have different formatting (like color) applied.</Abstract></ReturnValue>
			<Anchor>//api/name/highlight:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GMSyntaxHighlighter/tokenize:</TokenIdentifier>
			<Abstract type="html">Provides a list of tokens.</Abstract>
			<DeclaredIn>GMSyntaxHighlighter.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)tokenize:(NSString *)text</Declaration>
			<Parameters>
				<Parameter>
					<Name>text</Name>
					<Abstract type="html">The code you wish to tokenize.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns an array that contains NSStrings for pieces of code that were not matched to any token, or GMToken instances that are essentially tuples of a tokenType and a content, which is typically either a string or a list of tokens.</Abstract></ReturnValue>
			<Anchor>//api/name/tokenize:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GMSyntaxHighlighter/convertToHTML:</TokenIdentifier>
			<Abstract type="html">Returns an HTML string from a previously highlighted string.</Abstract>
			<DeclaredIn>GMSyntaxHighlighter.h</DeclaredIn>			
			
			<Declaration>- (NSString *)convertToHTML:(NSAttributedString *)as</Declaration>
			<Parameters>
				<Parameter>
					<Name>as</Name>
					<Abstract type="html">A previously highlighted attributed string.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An HTML string where tokens are set as class names on spans.</Abstract></ReturnValue>
			<Anchor>//api/name/convertToHTML:</Anchor>
		</Token>
		
	</File>
</Tokens>